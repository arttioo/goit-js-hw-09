{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAASH,SAASC,cAAc,wBAyBtC,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFI,EAAQ,C,SAAEN,E,MAAUC,IACpBQ,QAAQC,IAAI,C,SAAEV,E,MAAUC,KAExBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAlCAN,SAASC,cAAc,SAC/Be,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,MAAMC,EAAIC,OAAOrB,EAAWsB,OACtBC,EAAIF,OAAOlB,EAAUmB,OACrBE,EAAIH,OAAOjB,EAAOkB,OAExB,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAGC,GAAK,EAAG,CAC9B,MAAMC,EAAcN,EAAIG,GAAKE,EAAI,GACjCV,QAAQC,IAAIU,GACZrB,EAAcoB,EAAGC,GACdC,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBQ,QAAQC,IAAI,C,SAAEV,E,MAAUC,IACxBqB,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAAqBxB,QAAeC,OAC5DQ,QAAQC,IAAI,C,SAAEV,E,MAAUC,GAAQ,IAEjCwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAA9B,GAAS+B,OAAOG,QAAQ,oBAAoB1B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const a = Number(firstDelay.value);\n  const b = Number(delayStep.value);\n  const c = Number(amount.value);\n\n  for (let i = 0; i <= c; i += 1) {\n    const delayResult = a + b * (i - 1);\n    console.log(delayResult);\n    createPromise(i, delayResult)\n      .then(({ position, delay }) => {\n        console.log({ position, delay });\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        console.log({ position, delay });\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        console.log({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$firstDelay","document","querySelector","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","console","log","addEventListener","evt","preventDefault","a","Number","value","b","c","i","delayResult","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.691303f0.js.map"}